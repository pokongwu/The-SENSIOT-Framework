# docker-compose for running the SENSIOT Framework locally
version: '3.3'

networks:
  backend:

services:
  nsqlookupd:
    image: unibaktr/nsq
    entrypoint: nsqlookupd
    restart: on-failure
    ports:
      - "4160:4160"
      - "4161:4161"
    networks:
      backend:

  nsqd:
    image: unibaktr/nsq
    entrypoint: ["nsqd", "--lookupd-tcp-address=nsqlookupd:4160"]
    restart: on-failure
    ports:
      - "4150:4150"
      - "4151:4151"
    networks:
      backend:

  nsqadmin:
    image: unibaktr/nsq
    entrypoint: ["nsqadmin", "--lookupd-http-address=nsqlookupd:4161"]
    restart: on-failure
    networks:
      backend:
    ports:
      - "4171:4171"

  nsqcli:
    image: unibaktr/nsq
    command: ["nsq_tail","-lookupd-http-address","nsqlookupd:4161","-topic","sensors"]
    restart: on-failure
    networks:
      backend:
    

  grafana:
    image: unibaktr/grafana
    restart: on-failure
    depends_on:
      - prometheus
    # TODO: https://github.com/grafana/grafana-docker/issues/51
    # secrets:
    #   - source: grafana.ini
    #     target: /etc/grafana/grafana.ini
    # Alternative:
    env_file:
      - ./config/grafana/grafana.env
    volumes:
      - ./config/grafana/provisioning:/etc/grafana/provisioning
    networks:
      backend:
    ports:
      - "3000:3000"

  prometheus:
    image: unibaktr/prometheus
    restart: on-failure
    volumes:
      - ./config/prometheus/:/etc/prometheus/
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    networks:
      backend:
    ports:
      - "9090:9090"

#################################################
  local_manager:
    image: unibaub/sensiot
    restart: on-failure
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./config/sensiot.json:/app/sensiot.json
      - ./config/local_configuration.json:/etc/sensiot/local_configuration.json
    networks:
      backend:
    tty: true
    environment:
      CONFIG: ./sensiot.json
      SERVICE: "local_manager"


#################################################
  prometheus_writer:
    image: unibaub/sensiot
    restart: on-failure
    depends_on:
      - prometheus
    volumes: 
      - ./config/sensiot.json:/app/sensiot.json
    networks:
      backend:
    tty: true
    environment:
      CONFIG: ./sensiot.json
      SERVICE: "prometheus_writer"
    ports:
      - "8000:8000"


###########################
  cadvisor:
    image: unibaktr/cadvisor
    restart: on-failure
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    networks:
      backend:
    ports:
      - "8080:8080"